// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Blog = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Blog'
  /** The title of the post */
  title: string
  /** The date of the post */
  date: IsoDateTimeString
  /** Show child cards */
  show_child_posts?: boolean | undefined
  featured_image?: Image | undefined
  /** Description */
  description?: string | undefined
  author?: Author | undefined
  /** MDX file body */
  body: MDX
  url: string
  structuredData: json
  readTime: string
  headings: json
}

export type Work = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Work'
  /** The title of the post */
  title: string
  /** The date of the post */
  date: IsoDateTimeString
  featured_image?: Image | undefined
  /** Description */
  description?: string | undefined
  /** Description */
  client?: string | undefined
  /** Services given */
  services?: string[] | undefined
  /** The website url */
  website_url?: string | undefined
  examples?: Image[] | undefined
  /** MDX file body */
  body: MDX
  url: string
  structuredData: json
}  

/** Nested types */
export type Author = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Author'
  name: string
  avatar: string

}

export type Image = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Image'
  url: string
  alt: string
  width: number
  height: number

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Blog | Work
export type DocumentTypeNames = 'Blog' | 'Work'

export type NestedTypes = Author | Image
export type NestedTypeNames = 'Author' | 'Image'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allBlogs: Blog[]
  allWorks: Work[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Blog: Blog
  Work: Work
}

export type NestedTypeMap = {
  Author: Author
  Image: Image
}

 